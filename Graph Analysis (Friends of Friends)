WITH RECURSIVE friend_graph AS (
    -- Base case: direct friends
    SELECT 
        user_id AS person,
        friend_id AS friend,
        1 AS distance
    FROM friendships
    
    UNION ALL
    
    -- Recursive case: friends of friends
    SELECT
        fg.person,
        f.friend_id,
        fg.distance + 1
    FROM friend_graph fg
    JOIN friendships f ON fg.friend = f.user_id
    WHERE fg.distance < 3  -- Limit to 3 degrees of separation
)

SELECT
    p1.name AS person_name,
    p2.name AS friend_name,
    fg.distance,
    STRING_AGG(p3.name, ', ' ORDER BY p3.name) AS mutual_friends
FROM friend_graph fg
JOIN users p1 ON fg.person = p1.user_id
JOIN users p2 ON fg.friend = p2.user_id
LEFT JOIN friendships f1 ON f1.user_id = fg.person
LEFT JOIN friendships f2 ON f2.user_id = fg.friend AND f1.friend_id = f2.friend_id
LEFT JOIN users p3 ON f1.friend_id = p3.user_id
WHERE fg.distance <= 2
GROUP BY p1.name, p2.name, fg.distance
ORDER BY p1.name, fg.distance, p2.name;
